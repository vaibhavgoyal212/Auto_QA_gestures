%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: fm.dvi
%%CreationDate: Wed Oct 14 10:48:59 2020
%%BoundingBox: 0 413 480 794
%%DocumentFonts: CMR12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -P pdf fm.dvi -o fm.ps
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2020.10.14:1248
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 TeXDict begin /landplus90{true}store end
 
@fedspecial end
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 48 /zero put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD6DBD2817CD57D7CCC2FAE2B14257C7214981A0678BB213832B04A68AB3631
8B23CA966781ABFCBD46714EEDB6F54568E2E17613658D4F62AAE1B2B4732FA8
F3F9BB87D30D771D591B8E7F59EC319B3C80C7DDB03B26C4A34300BFECE03FD2
8732CB57F2E95555F4EBC6F97D187D7F7BF406499A2B12B953D0AE1984D78EF2
399E862A24DD788C8C23E5A620F4FD4BDD641715A50B543CA1C4DBC2B2F72F6D
19FA0C4EFE4E73FE9669F35AADCBCF96948C6A0F57223555F70B4116FEBF8041
0BD48817C5E2C69174395C9FAA22504E4A4F014CEF38F16D931E1077F8788685
8AF74DC1D5C7DDBBA0E4974CA7890B785D302C38EF46098F42BE6DC19566B7E1
3900E1760FD9347D3B597E451CBA9F7D4EDC10BA86DE1D6874AF13BCF56F25E2
480CC313F48E4017DC5A047B0488BD209AF035DBB875F4D0CFB5F9C44E2CD35B
0812E6E22D08E8D922081C4A7DEEAC986A84939432C6F8249DCC31B215604F75
09509296C67CFD1BC38B34B7EA0659984344C871F7828DB8B16CD472013BF4C6
E335799DA87A59F4C5895BCE2F7F75E6A51292456539E1859945B4F3AB568455
B00294452331DBD26B0E545402F92099F6DCFF21E855C65ADB139ECB3D4E194A
498BD13831157A9FB377B636B1A336F5F5CDF7A8490A4F1EBD80A2B950737B68
39C5C9AE21C3AAD875DCE2BADFAF4824B1CCC218FA8D16FEB26BCEF95E6C7804
A111CD5B4A6B1E11D981332B8F5A5CA962708ED9F52A910E71CAB291FAC4B38D
E7316C331F091A85796A3D5D938CB8E61A7B979AAC3A249FF3A529DE03D34738
16CC3ED3BF8576E75059C639BED52BEB85AFF4DF646283033DC8C63E2B52E35D
008EC22ACA54EF08027560343F14EC6A787F993555E1447D403ED6C1C1007981
761F4E7211F397F16A97044C5E2825DFB569AC3A94C8747C0682FF03C54E3624
257DAA9D0847FB4E97BAD877EDE08AF8BC138BC81ECF6D9E97172B9BA540C5D0
A9E3F75428E91826E6306550A08810660815C732B8494F88BD69206977053F60
922C20215BAD4D4BCF97B2A889D1ACE323F021285ABC2E61E71D6ED9D04724CC
D7356BC4393F91BED268EB99F0768B189C77A207450BADD4F15417FC82915E82
FF152D20B1DDB425068F6700D72392B8072BCFE963278CF60A356377B375050E
07B7EB89D4368FFE704A085BDE15582433D08B0D81C814FFFE8424B049500F25
ABB649F6C37647AFBABAE7E4C6CED141C8F9205E1A6E94CEB24429E459A0E4F7
545610B7F46C66A036F26C219345153C87A0B72D89457AD89FABDDAB349C759C
3D2ACE11A30F9BC1608AA653A1CEC7A8B7194020268DD73FD0CFA5A1505BA0F2
D309CA6B3FD4BF5FACA82C6CFB3F8E03F976373FB10C4CB899BCB2A35ACECB42
C67A08B4CD89A95A899C540EEED8FE184C50605B0CDE177BB86DBCC1CC0144EB
08F37F61F5248A7F80C0A02B0A2C0D37F302265D0A490E0ACCB609882B2E306C
B0134A39CEB6B51E7C3AB6132EDF3E240A444B96B6639B00D298229B6E0F8292
9CD2573CCCD7EDBC313E3DBA583129FB837AFE9EE1C0D80BBD5C809DF6A66273
16453370F3092E6759DD5A2FB727FD572609694F6328221D830439BE9398CD87
3164ED7BA7046398E82CC57A2DFC5B880DAD6DEE87AC9D377FF913C6B26D842F
3DC2DF03A01E4A54DC86A7B1F5030B7BE05E9F5DA2681A5B65C2852C19FF0188
2FFDF9D2847CACE2650369DDF6C0F22CF6B98E3C57B9DF447EC293BDA560A317
2511B4311600AACB9378CB19BEEDE3A51DAB4D15C7798DB9450C7D1D36420847
FDECB667D6FE09525A8C906B12909062D91EA96C926B6B45DD071690A776717F
3CE546807CB193171E7C40568655790F2142D31D5C56C5338F8F96A540D0EFCB
F7E10A5842A9027D5D1714248D2857EE0130A0E70C3EA1CC6589F04A801BB17B
9745B01DFF3F96FFDAAE45E1A1DBBD0C20D2DFF101A6CC5310ECA24348DA8B7C
F18C5D5C203C91C2E12F557F17190855E444D7AE848BCE4E96748DF6DE73167B
B6A3BA64ABF8524E04BB0D6D30BF34A202AAC5F5E9607AF346A2861DE2F574C1
DC15342128B6B3E54BF2F0C26E51A76131C9B05868F46B79B072A538359DB670
388CFCEBBCA52E54FCDDE889E5DDD3CD8511B0966AED0078C52BC9485DAC44B9
B3BC8487512604ED6E52BFE7D701997C88D44D814C633A347C50C7D8E3C246E6
272FE24EDBB32FAAC1284DD0EDA37A6627473F9255B9036729660150E9EB5F13
C3D7CE22D903D5E5F367F96087555EC27E2E6B32BCEF45974133BAF777756535
D113038BEF3395DCD40D2D2C2A2DE6B84B882259290AF6492DB46CF2BCE57701
CFA6D1F6C5F43EA10506F729505022565042A09F8EA8DC63E2CD192B947928B3
E1D587E2585721C228017D65E388BF01D4A9FCC143E7EDA9CA52777C2BFA0273
43F144C205488774961F6B7D313B85AB3A8D66276AC44D0FA771336833536B0C
9C708ABBF80751CBCF59A0841FB34A82BD34F78672AD9D1E15690914649075A8
73658C4EF11B887119E4095898A42CFF011C380ED9DEDA64053D624E5E246247
395FF070B17ED1C54E649F7C17581351B94C5E0991AEB1B1286B611BD5E3017E
E68A5B0AF32E1F71C69D8754F79F18EC3F9DA862CDAB28ADB461C85389C396CF
9C8A04AE5F6EB028D2026066377AC5405BA31A56903AE2F52899E3F6E6981E63
4E63F9F930B6ED84C9A660C11F6F266F1BF1EFBFD6E14CF14B840F00D7BB86E9
A9E310C2667F4A82EB71BD7A651B92CC34F1CAEF9AAFEA94EE47B0D9152F8B38
E464295C02E955117D3E12166E2D8D7149719C7CDD8DAA1508912A843DBD8979
3C8218D4CB76EF6BDD7A699A8AD02325659F98883CD3FED0615008E67407E888
EBF72E3D0706AA673DEBB1C235BF9811BC3FEA81CA66FBD7C3B2728D2F8994AC
6684F31FA2A0DCE4BC9BCFE5153DC766B6F3FD55AF4D576CACA5771BDD5AB3A1
5E508BE5CA80DB792487401525EDF37593C80C13CEE76A174DAF98283E5AA936
C82A23F3C0C6DDDF56FE3E3367E4D56613B7A38CAF3B1EF5326F6F2349C4EFCE
9A18EB3F52EE9D88989E7CBAC31F0D9091C00A584AE24AB6C9B49660B6CE159D
B9B539DA053999D781638BA0E52F4AC532E6B4FDABF6B61D8BC5FAD378BBA60D
BBD1C633325031DE6FA9C48822F17C10CF8A10BFEB9085563C6F73ACA283709F
874488C12F16DC36933B092A1E532766C4502805FBF2C9A5CB07EE6E18AFAB05
F564FEFFE5DA763DE39250B6B31302AC95207EBE4F56BE469527A67E0DC5A7AE
4FF2190316CCB6A633EBEE9EE93638D734F1E8503A0CD03A30A86A76FF6FE63A
5F7FF656B1C01DBE4A15761A6C4A311A0C52ED006D76368F084CE3ADC2EC383A
F67C7C11D1844A12E21DCA7C4155939AD8EEF10B42105AA70BF34488E8858D76
4400E03B89F987D459DC81C2A68544990B1C953ED6F1940B0FFA2DE23BE6FC15
8155506A4ED81274FBBC9F8E8D96FBE362EA7D927A55DB008DCD2F341250B8F2
A5C2C0C7553CBEA6D8028936B5EEB0D6573E2CE0AB357B099560410D9FCE659D
9C0B806B2A6146184758DE20D06058B20D7DF7D5D145AC123242AD60F0CAFB77
125652DD4F1B55F91CF74C5B3762A7979F8B4F9A5057AC5CB61149F5C0A8B294
5711183628B27A2D70C30FCF7BA5DDED398BDEB54BB48AAE83DD46CE3E5196BF
335B3EE15B30F676C4606E6438ADED334D07C900F00B671C2A9EA90B2EC77B93
C15C97FC40635BCF0FAC9565105A743A813CA36F5CD96FEF1C24EBD27CF18259
27C15F21F85B1B16834A4396D6FA03F5D1368A0A2B5273B86B28AE15A668B925
9EA3982EFF8373C6B68F4E76E92FAA956080EC91344CF5B510C2B308FBBE3502
75716FB4B3A4FF3F0A5DDD25876257BEB361C21228295C8A1C80C25A17BE7F31
D30BE5C64DCD3EF28CB37A62A1A25A99C22290B49F568A9B5957A588333CA512
649BA6DBB4BA7C581D08EBA0D2A930131D29190B77584165D8FFD732ACD6743E
692C1E52594263ADA6F6D0FEC002A7F2244DCAE8931BC81D67A8997BD2E49537
C80E9BE58C3E0047FCF58F8027EFA9349F29F96C9C2D395A3755C3586C9D1436
A5F66FCB7ADF7672FF4443FDF5555F8334BD7346C76023845C114A2BF77D6A20
FB1C13F336486298B7784E793A97915E4CCE850471B31DBBB62957C50543DE75
1E66D175D94C6F00EA731AF11FE1261BE357E454021E2843F5761033775A01F2
6E48F4EC9AE6FD4DB43EF373078A47DD03229EBDCD158E687EC1867BD378C94C
991FA718789103CF2C7419F387C4FF7E74F3ECA42520D3F2898C29F066F82F78
9C54D0A5A31E3BD8983993E8554D4AE04F9150A337E455DCBFAF730972C56AF3
D797884B7CBDE6C16C02C7099677D34CD3C837E129D5B29D7BC9B81DB243FE79
AE52071C6C33CB4CAEEC615AEB5061D6A72CF19C4EBB229487CB94665FF38187
A03D8E350CABA6F0EAE357EFD98B6C5405003C835EA1CFB41A42DDB80B71A057
1A2275C57CD6D35F387C6AD1DC73488880C0D74E5F62168F4C502CDA99CE8247
F4E78758E57116408A17720E1445E4DDBEFB0C3FAC9015C4E5C6F66870901DD2
8D8FE94653E975EE109E69C4073B38A894D46A99BAEC026A5CFC331BB74A7F1C
7B3D28253AC623F261E937B694F26909D21D78D72A2EAB713D178522EBDF00EC
CF56464B6A9B5CDA3B2E9D96957FC723B36A3001D55AF5C55071034E47B96300
C6C9DA4E61EAFE869434E239D5FF6C8E812A08A27C13EA1C4F491A27BB9B9979
C7E74280B0592E0909E4A35AEBD65C67A05EB55475D64CAB937814E8AF51A068
C0241BC8AE5862B70573DE47261CF9C984C73CBC28CEF76610FF50AA341A3CBC
E223018CC3B1AADF07F90D70B50CEA1FF84D7707FD5D5772793DD761C3623B34
5AEA63F24D82DCFB57D2AA2133505320CD4AC7E54A6F0CE49937A41A52780A20
51EC3122C5A4B6425CFCB0A7F8B6048FD945F5D8104E836D3C41708964880C77
AF100E46C6D92258FC34CC1425621D80451DCD3A3713E5E2340812576004FF19
3897F0EB2AD3B10B22E43DFE0A54A85579CD780A3BCAA61062F6F23C0FB3B6BA
2D958EFB6F87DEFA44F227F042CB10AD797A772A07B0A87583D9FB2C1DC27DFC
36012E26B67BC09E6BB958DD442EF0EA8E95D298D42B38CC115B0D6F64E59FB9
7C8F38D84AA5926F6F524A169249B307AD312A7116B47581B6DE5B234E898643
2C11C134E778B48F585FED55B10BBD69597AD73FA49DC16765329DCB5E6F31D1
46FFF4A5D276E49EF9AD45F1AC4CA61790EAAE84D18EB1F7CF671995783328E6
AD43085B563B4FECDA3C0989DECFA86141401663D79023CA8089DF207426B0A0
28DC67B340BD64C70C536308027367F23D572EDCD25D93060C1E75257FC4B1B3
81C625F97B4390B06BB06162D7CFA0F4B371CDCDC742A20A856D749FD80B55BA
785042F5DD4C15FA63154E486734F68DD215C102BBA0099B854869D1F5864998
35D6F1BA6BB0CC5DFB9D48EAEAF880CDCEA8D78F6BD0494AE1D7CC77E7B19AFA
CD0FE28760014606D658BC7FCAE0D4C266ACDC187CD071E74174D0E6A757ADF6
15D13E4035E6BDC31270FE1009508D8B3C0344F1661F537695C366E09AA0E603
9B5239811997384B219BB69AC57D187571F3AF8E37573A8A932DE6267A5B819E
AE2E32F3C52EF598B0064339FAF047D830E42F3DB0CA242B469E69B57B498C7B
0C4F624EC96BFF175AA9368FF1E103F10DCB211A90943DAA314E82440173E9B8
1ED0F61596B1FCF2AD30DB82B2D292E3F93F5229B262EEDC972A660D1E296C64
80FBB79C50E97D5A4269A22CF9B35383F78F06A167E6BC73729CF049CD29C5CB
E2BBD39C27352423D191777042B1D91EBAF175AA44C9A8DDBFA35EAE1BE4F8B1
C9B92D949D9B6903E714E1F6C3FC4C2361955467AC48E868A46A1623368E680A
C589F89C3DD91517705B8130FC5BB9C4A19A942315F3DD1D2D0C621D642F3CEF
F3266D91AE8A3FBE31052748431446BB60F3D3CF261FAFAC69A480468889080F
B68E397FFC5302D59088C5C9D0375EE72103D2D773E70A55D498060FD1097B28
F40F590C75CF1F7ED94B528953259E382B72A160C0E8D9AE36AC0398E11A4D20
06FC9E5202BAAB8AEB03F92609C792C97F28464BBE4D93BBCC98BEEE4271A64F
4806F1A3B1B5B324373A4704C2D159E6E1D7BDF92E1506A0BBB3E2E7EAC17F0B
BFE9A0D9CD6600BB98254D0764A515738327B83799BF350B92A89AE89EE9FA21
8E2876D2C77A9E4B76689FC2705F8F429C5120C3A4CCD16A83F86CB16558C741
434A9E601DA7ABE968B31F769C6563126916F9B7C46064B75682C7F1ED343429
CE7E9D8E41BF4BBCCC2099ED06E99D28CB174C025EBEBCE7270831A2BF6D9379
2DBE5E6E858C643C5953AF851316801C7CD1242BE3FBEE785B6333A5363A05FD
74334C58B5674A24C7EBFC9BB978B5464FCD6B93A3A2890D412CB654CE1A7988
670C44581D3960CA0673100D81729E5820A541A929FD4960BD1AF16423776B9F
688CE2083DE68CA20B2C6F472712416CEFCF6B308D69EEA9C07989DD315AFAF7
884A8D11236563120D008CDD4F1F888F6E34279F1BAD68DEB66AB76287D1520B
E87EB956148C8CF4290A3A8CCA41184B2E3EFBDA79C6CEF9FCF04B9E47DBDF44
9974F4188903D31FE205F68AB3FD96DF2E70DE10706B9E32A3A3B563BBEE65A4
1416E00F14A335A1118DC7A110DE6858C53E082698E06538B05C64177D51CF8A
555956F43BD5084A09FE45376FDDC96A1CCD402AEE044F353A60C432A2C3D12A
6FB6C3446D936198B1EDE578ABDA0283F342CB4AEE00FE04FBADA412CFBA4A68
85C28622C40E6AB8025660CA3EAAD0BEFAF7501BAF42199E0668503E9791D0C5
E7AE0EBC02E1FADC0FFDFC853325413A1A73DBC6D4E0AC9AE5E724FB4AE7022F
DD45803400B096EBBCE149A1683A592ACB79523A955BA7158CB105CB6ED30A41
F2B719A0DA069791E1948E4EB0A511FC5A304503FC95791F05B7528D5199B0BD
A49AF8498734C20B7E1093ED94489DEEC6FA03D6DFC20E815259BA0C3A4171DD
E140BF6DFBEB4B5753A129C472042D5AF27BD12A14DD68C276FD2B4760AA3967
79934273A1FF0B8DED346FC2BF69A02D23D8C6DB76F0D78BF51F462DBD532BCF
C009EADA576C9EDDDBCAA0F1E0DD2B7D7302B6EF28DCB23CC8AD034E7EE8EF1C
D71316E8CA1D8C004B92BE561ABDFE5C60278E777A41F89D9BC857CFAAED3C30
CECE4F707CCAB67C36B21DC803E847EC2FB63443031C152593F586CB2E50CDE3
8728669679DDC58DB9B6DFEA0BDECBF8BC9C0531BE91B049DDB7676EBC480DC8
BF948C80D2149B2894F58FF8327339B065210B44F54B90861F75B109FB99D7B1
37FA4D062B60AA1EFE56A56DAC25572C31C5F5B7785440150076B57FC8D8887F
E2E9B97E518B6B1A9B912724671DF41E8D02B2B0CA60D11816806895B30F7C89
509BD6157956CAECDD9CC8D566117C69D087268BB3405BDA52FF20A7AB2EA7FD
01560114EC124B625DB23DD57DD4F08E7EF43246E07AB456D0612F53E752AD1A
7514C381050A498D9BE5FBADE7C4663886228C5CFC139E00084955316FD47483
2FA6F65F093ECB84BC2D927B8C9931AF7C26FB419B67E7298CA2E6F030C8EAE0
94E29C1D768AF32DBA148BF1E01F585BDD97888532FC27C0DB154D9EA7D47888
BCCDB9EB813F6D20D963FCBADA861F8EC4181186029E646C40A4B3B85082EDCD
173C6D5383A8D274ECFC8E8A30196FA01B3CDF646A6102B62F2F3E3EF55A5994
B2A259EEFC78C13F504792C33B49167506BB4827282BE30953E17723CA59A2B9
09CFB47C14821A356CA33BD159118856770520E02C5B56D2DC7E7F5315CE3B8F
D5CEE35E11D83985B810F610B1DF4D09603C3F1B12EA294278AEDCE36E5950F5
FF882E43424CC29446233C890BED1AF92340AEFDE00A522D8E3F92C9F8828305
5C60F1C78065B9F3335A90565BDB4D47EEC5B58A259FD9BA01B34EC79768433F
56FE124458A2CC6E141B621D510021E1F37118938C8C66F033B64C6FA4CC1FF2
3A829149783D0C49CBEBE0277015DCBDA2390989A5E08EC7E3AD00FE30CED29D
21B0EB3985A40892BD0F1CD07C97D8C2D2533325764A66C7D6AEE897A3509F94
22FB863F57BA3849C4CF50B2F933A8C05A91BEBBF32D787542CE1BC27F2BBBC5
44BA227D2DD8E0074808995AFF10460DF0D609BE287B8B7D93BA9BBFE49AAC8A
29F87F8B81BA8AE8335EEDDE1CC9FC83ECBAD3B55EB0FEE9E39748CBDBC5BE8C
5D0F65559216EAD2230932D947967358C7CA2951C8A926E59F92A63B15B4ADC1
959FEA1808A796E9C537ADA9F0C1BD2038B9F20BC449EB0F937E504DE8A366C9
0F8CF0ADCABE54037844DF330865E65EB28200C1C68019B08D0BB01637C55BBB
E0B8F13A28FC4736FB72D616ADE6E29A2AF0E9615CD972C2A833234479E839B5
590F0E59515DBEADD4D35C7445B212AF2EDB90D3AB0270690838B9DCA75955A6
9577400D0239BD8CF4685D0F535A6984A845623B1D079B83F1433614430EF9F8
7E6B52D1B37D17A1B399B595E6A074422CA2038869E731275ADB1188751AEBB6
595ACFA45D538FCF26E979128E5869CC74C5D0006BA809D07C253F8EE26AF881
2D3E86F3B73E8DCF67C9FA874795F8C61383DB4B7404A65FB128AB5F03003301
676BF38E259BD0F0D32E99D817B2659127F5E3E07128A9A7A870674F52A6BAC9
DE94133D1F740E65B369986AE8DCF544CFFBBB56FCBD7CA67AACEF9F495C60BE
1B172EF5ECD8AD1DC09992A7C441BD09AF8C8F309B148B0E08274DEF9508811E
80A7048295A277ADBA6B0EFE90414FF8536439FBC330AC8EFB672BC7E9376805
A02A9B842D5975E8E9003A23F1E03DBA37213B7A03180AB7D6FF09AF2E574625
1690B2384D7225957C3DB0BABF5B30657C220FEF8CF3667DE13FE3BF00043595
0B2BD054CF7C2CFB68C1A39CC28BC6A938365A2DFB267B6C41AEEC953189341E
C43AE0CD219A174F20F7E7A0AE0C278C98D4736013BD54EE0E6074F0B02014C9
D69C5A6DE002DA0ACE39B092AEC65217FE27C1D9E5004F512EF9463A7296A42D
9BA8A80067FB17BC407CB9C60BFD3D6CBEE77CF13B4B712F1BEAA80DF8C36DF3
501187C89D38975E76D16CC11AD2F138494DFEF10CA4F04DBC0D29742779A46E
1F82135B1F4D973F0DB0EFBDA145B39468F16BBA0889A696785B6388FB55A20C
73D1A92DE9749F47F8C33A979149C57EF05497D63D8CF4BB41CF350D73F3EA82
0C274BB4BDF9C52ADBCA0F2C3AAD1D09E5DBE3185887ED8E79B97248C3334222
8B35FB7B7286573E1ACBDB791ED19D5C9FF403BF92A78CF80CE3C232C7A5CD94
12020B7DF4AE7E290AA29ABE21764AB9361E1775AC0FF67466DDA6831AFAE4D2
083223DD166F11FE4F4BD43201F308F3174F29AAE28BF30D48AB0AB37FDD0213
B70E35FC963B4F3EA6B21D3A2B66F1AF4BABF9E9373CDC517C1FE0E93FA71E36
B9F5327D83C5093C1D3054810933524C4EFEF311EC5CA6AF0B83316B093DD08F
295D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 8000 8000 (fm.dvi)
@start /Fa 138[723 506 513 506 1[723 650 723 1084 361
686 1[361 1[650 397 578 1[578 1[650 12[939 723 2[885
1[975 1192 4[975 2[885 993 939 921 975 7[650 650 650
650 650 650 650 2[650 2[434 45[{}36 1328.35 /CMR12 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black Black -8000 34023 a
 /PSfrag where{pop(xlabel1)[[0(Bc)1 0]](ylabel1)[[1(Bc)1 0]](xt1)[[2(Bc)1
0]](xt2)[[3(Bc)1 0]](xt3)[[4(Bc)1 0]](xt4)[[5(Bc)1 0]](xt5)[[6(Bc)1
0]](xt6)[[7(Bc)1 0]](xt7)[[8(Bc)1 0]](yt1)[[9(Br)1 0]](yt2)[[10(Br)1
0]](yt3)[[11(Br)1 0]](yt4)[[12(Br)1 0]](yt5)[[13(Br)1 0]](yt6)[[14(Br)1
0]](yt7)[[15(Br)1 0]](N1)[[16(Bl)1 0]](M2)[[17(Bl)1 0]](BA3)[[18(Bl)1
0]](BT4)[[19(Bl)1 0]](SA5)[[20(Bl)1 0]](SB6)[[21(Bl)1 0]](SC7)[[22(Bl)1
0]](SD8)[[23(Bl)1 0]](SE9)[[24(Bl)1 0]]25 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse

-8000 34023 a @beginspecial 35 @llx 16 @lly 444 @urx
337 @ury 4819 @rwi @setspecial
%%BeginDocument: ../../joint_plot_copy_x_fm.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (MATLAB, The Mathworks, Inc. Version 9.4.0.813654 \(R2018a\). Operating System: Mac OS X)
%%Title: output/joint_plot_copy_x_fm.eps
%%CreationDate: 2020-10-14T12:48:22
%%Pages: (atend)
%%BoundingBox:    35    16   444   337
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
%%BeginResource: procset (Apache XML Graphics Std ProcSet) 1.2 0
%%Version: 1.2 0
%%Copyright: (Copyright 2001-2003,2010 The Apache Software Foundation. License terms: http://www.apache.org/licenses/LICENSE-2.0)
/bd{bind def}bind def
/ld{load def}bd
/GR/grestore ld
/GS/gsave ld
/RM/rmoveto ld
/C/curveto ld
/t/show ld
/L/lineto ld
/ML/setmiterlimit ld
/CT/concat ld
/f/fill ld
/N/newpath ld
/S/stroke ld
/CC/setcmykcolor ld
/A/ashow ld
/cp/closepath ld
/RC/setrgbcolor ld
/LJ/setlinejoin ld
/GC/setgray ld
/LW/setlinewidth ld
/M/moveto ld
/re {4 2 roll M
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
cp } bd
/_ctm matrix def
/_tm matrix def
/BT { _ctm currentmatrix pop matrix _tm copy pop 0 0 moveto } bd
/ET { _ctm setmatrix } bd
/iTm { _ctm setmatrix _tm concat } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/ux 0.0 def
/uy 0.0 def
/F {
  /Tp exch def
  /Tf exch def
  Tf findfont Tp scalefont setfont
  /cf Tf def  /cs Tp def
} bd
/ULS {currentpoint /uy exch def /ux exch def} bd
/ULE {
  /Tcx currentpoint pop def
  gsave
  newpath
  cf findfont cs scalefont dup
  /FontMatrix get 0 get /Ts exch def /FontInfo get dup
  /UnderlinePosition get Ts mul /To exch def
  /UnderlineThickness get Ts mul /Tt exch def
  ux uy To add moveto  Tcx uy To add lineto
  Tt setlinewidth stroke
  grestore
} bd
/OLE {
  /Tcx currentpoint pop def
  gsave
  newpath
  cf findfont cs scalefont dup
  /FontMatrix get 0 get /Ts exch def /FontInfo get dup
  /UnderlinePosition get Ts mul /To exch def
  /UnderlineThickness get Ts mul /Tt exch def
  ux uy To add cs add moveto Tcx uy To add cs add lineto
  Tt setlinewidth stroke
  grestore
} bd
/SOE {
  /Tcx currentpoint pop def
  gsave
  newpath
  cf findfont cs scalefont dup
  /FontMatrix get 0 get /Ts exch def /FontInfo get dup
  /UnderlinePosition get Ts mul /To exch def
  /UnderlineThickness get Ts mul /Tt exch def
  ux uy To add cs 10 mul 26 idiv add moveto Tcx uy To add cs 10 mul 26 idiv add lineto
  Tt setlinewidth stroke
  grestore
} bd
/QT {
/Y22 exch store
/X22 exch store
/Y21 exch store
/X21 exch store
currentpoint
/Y21 load 2 mul add 3 div exch
/X21 load 2 mul add 3 div exch
/X21 load 2 mul /X22 load add 3 div
/Y21 load 2 mul /Y22 load add 3 div
/X22 load /Y22 load curveto
} bd
/SSPD {
dup length /d exch dict def
{
/v exch def
/k exch def
currentpagedevice k known {
/cpdv currentpagedevice k get def
v cpdv ne {
/upd false def
/nullv v type /nulltype eq def
/nullcpdv cpdv type /nulltype eq def
nullv nullcpdv or
{
/upd true def
} {
/sametype v type cpdv type eq def
sametype {
v type /arraytype eq {
/vlen v length def
/cpdvlen cpdv length def
vlen cpdvlen eq {
0 1 vlen 1 sub {
/i exch def
/obj v i get def
/cpdobj cpdv i get def
obj cpdobj ne {
/upd true def
exit
} if
} for
} {
/upd true def
} ifelse
} {
v type /dicttype eq {
v {
/dv exch def
/dk exch def
/cpddv cpdv dk get def
dv cpddv ne {
/upd true def
exit
} if
} forall
} {
/upd true def
} ifelse
} ifelse
} if
} ifelse
upd true eq {
d k v put
} if
} if
} if
} forall
d length 0 gt {
d setpagedevice
} if
} bd
/RE { % /NewFontName [NewEncodingArray] /FontName RE -
  findfont dup length dict begin
  {
    1 index /FID ne
    {def} {pop pop} ifelse
  } forall
  /Encoding exch def
  /FontName 1 index def
  currentdict definefont pop
  end
} bind def
%%EndResource
%%BeginResource: procset (Apache XML Graphics EPS ProcSet) 1.0 0
%%Version: 1.0 0
%%Copyright: (Copyright 2002-2003 The Apache Software Foundation. License terms: http://www.apache.org/licenses/LICENSE-2.0)
/BeginEPSF { %def
/b4_Inc_state save def         % Save state for cleanup
/dict_count countdictstack def % Count objects on dict stack
/op_count count 1 sub def      % Count objects on operand stack
userdict begin                 % Push userdict on dict stack
/showpage { } def              % Redefine showpage, { } = null proc
0 setgray 0 setlinecap         % Prepare graphics state
1 setlinewidth 0 setlinejoin
10 setmiterlimit [ ] 0 setdash newpath
/languagelevel where           % If level not equal to 1 then
{pop languagelevel             % set strokeadjust and
1 ne                           % overprint to their defaults.
{false setstrokeadjust false setoverprint
} if
} if
} bd
/EndEPSF { %def
count op_count sub {pop} repeat            % Clean up stacks
countdictstack dict_count sub {end} repeat
b4_Inc_state restore
} bd
%%EndResource
%FOPBeginFontDict
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-BoldOblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font ZapfDingbats
%%IncludeResource: font Symbol
%%IncludeResource: font Helvetica
%%IncludeResource: font Helvetica-Oblique
%%IncludeResource: font Helvetica-Bold
%%IncludeResource: font Helvetica-BoldOblique
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-BoldItalic
%%IncludeResource: font Courier
%FOPEndFontDict
%%BeginResource: encoding WinAnsiEncoding
/WinAnsiEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma
/hyphen /period /slash /zero /one
/two /three /four /five /six
/seven /eight /nine /colon /semicolon
/less /equal /greater /question /at
/A /B /C /D /E
/F /G /H /I /J
/K /L /M /N /O
/P /Q /R /S /T
/U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum
/underscore /quoteleft /a /b /c
/d /e /f /g /h
/i /j /k /l /m
/n /o /p /q /r
/s /t /u /v /w
/x /y /z /braceleft /bar
/braceright /asciitilde /bullet /Euro /bullet
/quotesinglbase /florin /quotedblbase /ellipsis /dagger
/daggerdbl /circumflex /perthousand /Scaron /guilsinglleft
/OE /bullet /Zcaron /bullet /bullet
/quoteleft /quoteright /quotedblleft /quotedblright /bullet
/endash /emdash /asciitilde /trademark /scaron
/guilsinglright /oe /bullet /zcaron /Ydieresis
/space /exclamdown /cent /sterling /currency
/yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /sfthyphen /registered
/macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /middot /cedilla
/onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex
/Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave
/Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis
/multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave
/aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex
/edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex
/otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn
/ydieresis
] def
%%EndResource
%FOPBeginFontReencode
/Courier-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Courier-Oblique exch definefont pop
/Courier-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Courier-BoldOblique exch definefont pop
/Courier-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Courier-Bold exch definefont pop
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Helvetica exch definefont pop
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Helvetica-Oblique exch definefont pop
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Helvetica-Bold exch definefont pop
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Helvetica-BoldOblique exch definefont pop
/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Times-Roman exch definefont pop
/Times-Italic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Times-Italic exch definefont pop
/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Times-Bold exch definefont pop
/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Times-BoldItalic exch definefont pop
/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding WinAnsiEncoding def
  currentdict
end
/Courier exch definefont pop
%FOPEndFontReencode
%%EndProlog
%%Page: 1 1
%%PageBoundingBox: 0 0 482 361
%%BeginPageSetup
[1 0 0 -1 0 361] CT
%%EndPageSetup
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 321.5 M
436 321.5 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 27 M
436 27 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 321.5 M
62.5 315.897 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
124.75 321.5 M
124.75 315.897 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
187 321.5 M
187 315.897 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
249.25 321.5 M
249.25 315.897 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
311.5 321.5 M
311.5 315.897 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
373.75 321.5 M
373.75 315.897 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 321.5 M
436 315.897 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 27 M
62.5 32.603 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
124.75 27 M
124.75 32.603 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
187 27 M
187 32.603 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
249.25 27 M
249.25 32.603 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
311.5 27 M
311.5 32.603 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
373.75 27 M
373.75 32.603 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 27 M
436 32.603 L
S
GR
GS
[0.99977 0 0 1.00116 62.48571 324.25756] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-6.5 9 moveto 
1 -1 scale
(xt1) t 
GR
GR
GS
[0.99977 0 0 1.00116 124.72147 324.25756] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-6.5 9 moveto 
1 -1 scale
(xt2) t 
GR
GR
GS
[0.99977 0 0 1.00116 186.95723 324.25756] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-6.5 9 moveto 
1 -1 scale
(xt3) t 
GR
GR
GS
[0.99977 0 0 1.00116 249.193 324.25756] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-6.5 9 moveto 
1 -1 scale
(xt4) t 
GR
GR
GS
[0.99977 0 0 1.00116 311.42876 324.25756] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-6.5 9 moveto 
1 -1 scale
(xt5) t 
GR
GR
GS
[0.99977 0 0 1.00116 373.66453 324.25756] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-6.5 9 moveto 
1 -1 scale
(xt6) t 
GR
GR
GS
[0.99977 0 0 1.00116 435.90029 324.25756] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-6.5 9 moveto 
1 -1 scale
(xt7) t 
GR
GR
GS
[0.99977 0 0 1.00116 249.19318 335.77086] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-14 9 moveto 
1 -1 scale
(xlabel1) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 321.5 M
62.5 27 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 321.5 M
436 27 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 321.5 M
68.103 321.5 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 272.417 M
68.103 272.417 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 223.333 M
68.103 223.333 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 174.25 M
68.103 174.25 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 125.167 M
68.103 125.167 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 76.083 M
68.103 76.083 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
62.5 27 M
68.103 27 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 321.5 M
430.397 321.5 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 272.417 M
430.397 272.417 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 223.333 M
430.397 223.333 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 174.25 M
430.397 174.25 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 125.167 M
430.397 125.167 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 76.083 M
430.397 76.083 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.149 GC
2 setlinecap
1 LJ
0.7 LW
N
436 27 M
430.397 27 L
S
GR
GS
[0.99977 0 0 1.00116 59.68635 321.45434] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-13 3 moveto 
1 -1 scale
(yt1) t 
GR
GR
GS
[0.99977 0 0 1.00116 59.68635 272.31425] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-13 3 moveto 
1 -1 scale
(yt2) t 
GR
GR
GS
[0.99977 0 0 1.00116 59.68635 223.17418] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-13 3 moveto 
1 -1 scale
(yt3) t 
GR
GR
GS
[0.99977 0 0 1.00116 59.68635 174.03411] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-13 3 moveto 
1 -1 scale
(yt4) t 
GR
GR
GS
[0.99977 0 0 1.00116 59.68635 124.89403] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-13 3 moveto 
1 -1 scale
(yt5) t 
GR
GR
GS
[0.99977 0 0 1.00116 59.68635 75.75396] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-13 3 moveto 
1 -1 scale
(yt6) t 
GR
GR
GS
[0.99977 0 0 1.00116 59.68635 26.61389] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-13 3 moveto 
1 -1 scale
(yt7) t 
GR
GR
GS
[0 -1.00116 0.99977 0 44.68977 174.03396] CT
0.149 GC
/Courier 9 F
GS
[1 0 0 1 0 0] CT
-14 -3 moveto 
1 -1 scale
(ylabel1) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
1 LJ
0.7 LW
N
311.5 80.992 M
342.625 80.992 L
342.625 61.358 L
311.5 61.358 L
311.5 80.992 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.502 GC
1 LJ
0.7 LW
N
311.5 208.608 M
342.625 208.608 L
342.625 179.158 L
311.5 179.158 L
311.5 208.608 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0 1 0 RC
1 LJ
0.7 LW
N
149.65 282.233 M
180.775 282.233 L
180.775 267.508 L
149.65 267.508 L
149.65 282.233 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
1 0 0 RC
1 LJ
0.7 LW
N
205.675 296.958 M
236.8 296.958 L
236.8 272.417 L
205.675 272.417 L
205.675 296.958 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.969 0.973 0 RC
1 LJ
0.7 LW
N
93.625 316.592 M
130.975 316.592 L
130.975 287.142 L
93.625 287.142 L
93.625 316.592 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0 0 1 RC
1 LJ
0.7 LW
N
187 272.417 M
218.125 272.417 L
218.125 247.875 L
187 247.875 L
187 272.417 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.502 0 0 RC
1 LJ
0.7 LW
N
218.125 233.15 M
249.25 233.15 L
249.25 213.517 L
218.125 213.517 L
218.125 233.15 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
1 0 1 RC
1 LJ
0.7 LW
N
230.575 242.967 M
255.475 242.967 L
255.475 223.333 L
230.575 223.333 L
230.575 242.967 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
1 0.502 0.502 RC
1 LJ
0.7 LW
N
168.325 252.783 M
193.225 252.783 L
193.225 228.242 L
168.325 228.242 L
168.325 252.783 L
S
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
[1 3] 0 setdash
2 LJ
0.7 LW
N
62.455 321.535 M
436.045 26.965 L
S
GR
GS
[0.99977 0 0 1.00116 407.90669 218.08498] CT
/Courier 8.1 F
GS
[1 0 0 1 0 0] CT
0 2.5 moveto 
1 -1 scale
(N1) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
1 LJ
0.7 LW
N
375 218.25 M
405 218.25 L
S
GR
GS
[0.99977 0 0 1.00116 407.90669 229.09769] CT
/Courier 8.1 F
GS
[1 0 0 1 0 0] CT
0 2.5 moveto 
1 -1 scale
(M2) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.502 GC
1 LJ
0.7 LW
N
375 229.25 M
405 229.25 L
S
GR
GS
[0.99977 0 0 1.00116 407.90669 240.11041] CT
/Courier 8.1 F
GS
[1 0 0 1 0 0] CT
0 2.5 moveto 
1 -1 scale
(BA3) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0 1 0 RC
1 LJ
0.7 LW
N
375 240.25 M
405 240.25 L
S
GR
GS
[0.99977 0 0 1.00116 407.90669 251.12313] CT
/Courier 8.1 F
GS
[1 0 0 1 0 0] CT
0 2.5 moveto 
1 -1 scale
(BT4) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
1 0 0 RC
1 LJ
0.7 LW
N
375 251.25 M
405 251.25 L
S
GR
GS
[0.99977 0 0 1.00116 407.90669 262.13584] CT
/Courier 8.1 F
GS
[1 0 0 1 0 0] CT
0 2.5 moveto 
1 -1 scale
(SA5) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.969 0.973 0 RC
1 LJ
0.7 LW
N
375 262.25 M
405 262.25 L
S
GR
GS
[0.99977 0 0 1.00116 407.90669 273.14856] CT
/Courier 8.1 F
GS
[1 0 0 1 0 0] CT
0 2.5 moveto 
1 -1 scale
(SB6) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0 0 1 RC
1 LJ
0.7 LW
N
375 273.25 M
405 273.25 L
S
GR
GS
[0.99977 0 0 1.00116 407.90669 284.16127] CT
/Courier 8.1 F
GS
[1 0 0 1 0 0] CT
0 2.5 moveto 
1 -1 scale
(SC7) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
0.502 0 0 RC
1 LJ
0.7 LW
N
375 284.25 M
405 284.25 L
S
GR
GS
[0.99977 0 0 1.00116 407.90669 295.17399] CT
/Courier 8.1 F
GS
[1 0 0 1 0 0] CT
0 2.5 moveto 
1 -1 scale
(SD8) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
1 0 1 RC
1 LJ
0.7 LW
N
375 295.25 M
405 295.25 L
S
GR
GS
[0.99977 0 0 1.00116 407.90669 306.18671] CT
/Courier 8.1 F
GS
[1 0 0 1 0 0] CT
0 2.5 moveto 
1 -1 scale
(SE9) t 
GR
GR
GS
[0.99977 0 0 1.00116 0 -0.41733] CT
1 0.502 0.502 RC
1 LJ
0.7 LW
N
375 306.25 M
405 306.25 L
S
GR
%%Trailer
%%Pages: 1
%%EOF

%%EndDocument
 @endspecial -8000 34023 a
 /End PSfrag
 -8000 34023 a -8000 -7551
a
 /Hide PSfrag
 -8000 -7551 a -19587 -6629 a Fa(PSfrag)434 b(replacemen)-36
b(ts)p -19587 -6158 11587 54 v -8000 -6105 a
 /Unhide PSfrag
 -8000 -6105
a -12433 -4499 a
  {
 -12433 -4499 a Black -4433 w Fa(Human-lik)g(eness)p
Black -12433 -4499 a
  } 0/Place PSfrag
 -12433 -4499 a -12614 -3153 a
  {
 -12614
-3153 a Black -4613 w Fa(Appropriateness)p Black -12614
-3153 a
  } 1/Place PSfrag
 -12614 -3153 a -8650 -1289 a
  {
 -8650 -1289 a Black
-650 w Fa(30)p Black -8650 -1289 a
  } 2/Place PSfrag
 -8650 -1289 a -8650
316 a
  {
 -8650 316 a Black -650 w Fa(40)p Black -8650 316
a
  } 3/Place PSfrag
 -8650 316 a -8650 1921 a
  {
 -8650 1921 a Black -650 w
Fa(50)p Black -8650 1921 a
  } 4/Place PSfrag
 -8650 1921 a -8650 3526 a
  {

-8650 3526 a Black -650 w Fa(60)p Black -8650 3526 a
  } 5/Place PSfrag

-8650 3526 a -8650 5131 a
  {
 -8650 5131 a Black -650 w Fa(70)p
Black -8650 5131 a
  } 6/Place PSfrag
 -8650 5131 a -8650 6736 a
  {
 -8650 6736
a Black -650 w Fa(80)p Black -8650 6736 a
  } 7/Place PSfrag
 -8650 6736
a -8650 8341 a
  {
 -8650 8341 a Black -650 w Fa(90)p Black
-8650 8341 a
  } 8/Place PSfrag
 -8650 8341 a -8000 9946 a
  {
 -8000 9946 a Black
-1301 w Fa(30)p Black -8000 9946 a
  } 9/Place PSfrag
 -8000 9946 a -8000
11551 a
  {
 -8000 11551 a Black -1301 w Fa(40)p Black -8000
11551 a
  } 10/Place PSfrag
 -8000 11551 a -8000 13157 a
  {
 -8000 13157 a Black
-1301 w Fa(50)p Black -8000 13157 a
  } 11/Place PSfrag
 -8000 13157 a -8000
14762 a
  {
 -8000 14762 a Black -1301 w Fa(60)p Black -8000
14762 a
  } 12/Place PSfrag
 -8000 14762 a -8000 16367 a
  {
 -8000 16367 a Black
-1301 w Fa(70)p Black -8000 16367 a
  } 13/Place PSfrag
 -8000 16367 a -8000
17972 a
  {
 -8000 17972 a Black -1301 w Fa(80)p Black -8000
17972 a
  } 14/Place PSfrag
 -8000 17972 a -8000 19577 a
  {
 -8000 19577 a Black
-1301 w Fa(90)p Black -8000 19577 a
  } 15/Place PSfrag
 -8000 19577 a -8975
21182 a
  {
 -8975 21182 a Black Fa(N)p Black -8975 21182
a
  } 16/Place PSfrag
 -8975 21182 a -9192 22787 a
  {
 -9192 22787 a Black Fa(M)p
Black -9192 22787 a
  } 17/Place PSfrag
 -9192 22787 a -9896 24392 a
  {
 -9896
24392 a Black Fa(BA)p Black -9896 24392 a
  } 18/Place PSfrag
 -9896 24392
a -9860 25997 a
  {
 -9860 25997 a Black Fa(BT)p Black -9860
25997 a
  } 19/Place PSfrag
 -9860 25997 a -9698 27602 a
  {
 -9698 27602 a Black
Fa(SA)p Black -9698 27602 a
  } 20/Place PSfrag
 -9698 27602 a -9644 29207
a
  {
 -9644 29207 a Black Fa(SB)p Black -9644 29207 a
  } 21/Place PSfrag
 -9644
29207 a -9662 30813 a
  {
 -9662 30813 a Black Fa(SC)p Black
-9662 30813 a
  } 22/Place PSfrag
 -9662 30813 a -9716 32418 a
  {
 -9716 32418
a Black Fa(SD)p Black -9716 32418 a
  } 23/Place PSfrag
 -9716 32418 a -9608
34023 a
  {
 -9608 34023 a Black Fa(SE)p Black -9608 34023
a
  } 24/Place PSfrag
 -9608 34023 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
